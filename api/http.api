syntax = "v1"


// 添加http服务请求
type AddHTTPResquest {
    ServiceName string `json:"service_name" validate:"valid_service_name"`     //服务名
    ServiceDesc string `json:"service_desc" validate:"required,max=255,min=1"` //服务描述

    RuleType       int    `json:"rule_type" validate:"max=1,min=0"`                  //接入类型
    Rule           string `json:"rule"  validate:"required,valid_rule"`              //域名或者前缀
    NeedHttps      int    `json:"need_https" validate:"max=1,min=0"`                 //支持https
    NeedStripUri   int    `json:"need_strip_uri"   validate:"max=1,min=0"`           //启用strip_uri
    NeedWebsocket  int    `json:"need_websocket"   validate:"max=1,min=0"`           //是否支持websocket
    UrlRewrite     string `json:"url_rewrite"  validate:"valid_url_rewrite"`         //url重写功能
    HeaderTransfor string `json:"header_transfor"  validate:"valid_header_transfor"` //header转换

    OpenAuth          int    `json:"open_auth"   validate:"max=1,min=0"`    //关键词
    BlackList         string `json:"black_list"  validate:""`               //黑名单ip
    WhiteList         string `json:"white_list"   validate:""`              //白名单ip
    ClientipFlowLimit int    `json:"clientip_flow_limit"  validate:"min=0"` //客户端ip限流
    ServiceFlowLimit  int    `json:"service_flow_limit"  validate:"min=0"`  //服务端限流

    RoundType              int    `json:"round_type"  validate:"max=3,min=0"`                //轮询方式
    IpList                 string `json:"ip_list" validate:"required,valid_ipportlist"`      //ip列表
    WeightList             string `json:"weight_list"  validate:"required,valid_weightlist"` //权重列表
    UpstreamConnectTimeout int    `json:"upstream_connect_timeout" validate:"min=0"`         //建立连接超时, 单位s
    UpstreamHeaderTimeout  int    `json:"upstream_header_timeout"  validate:"min=0"`         //获取header超时, 单位s
    UpstreamIdleTimeout    int    `json:"upstream_idle_timeout"  validate:"min=0"`           //链接最大空闲时间, 单位s
    UpstreamMaxIdle        int    `json:"upstream_max_idle"  validate:"min=0"`               //最大空闲链接数
}

type CommonReponse {
    Msg string `json:"msg"`
}

@server(
    group: serviceHttp
    middleware: ParamCheck
)
service gateway-api {
    @handler AddHttp
    post /service/add_http (AddHTTPResquest) returns (CommonReponse);
}